{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/form/Input.js\";\nimport React from 'react';\nimport Colors from '../../../constants/Colors';\nimport { validateEmail, validateNum, validateDefaultInput } from '../../Helpers/FormValidation/InputValidation';\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      _this.handleChange({\n        target: {\n          value: _this.state.value,\n          name: _this.state.name\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        value: event.target.value\n      }, function () {\n        switch (_this.state.type) {\n          case 'email':\n            _this.setState({\n              isValid: validateEmail(_this.state.value)\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n\n          case 'number':\n            _this.setState({\n              isValid: validateNum(_this.state.value, _this.state.numberLength)\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n\n          default:\n            _this.setState({\n              isValid: _this.state.required ? validateDefaultInput(_this.state.value) : true\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getEvent\", function () {\n      var tmpEvent = {};\n      tmpEvent.target = {\n        isValid: _this.state.isValid,\n        name: _this.state.name,\n        value: _this.state.value\n      };\n      return tmpEvent;\n    });\n\n    _this.state = {\n      value: _this.props.value ? _this.props.value : '',\n      isValid: !!_this.props.value,\n      fieldType: _this.props.fieldType,\n      required: _this.props.required ? _this.props.required : false,\n      errorMessage: _this.props.errorMessage,\n      disabled: _this.props.disabled,\n      placeholder: _this.props.placeholder ? _this.props.placeholder : null,\n      onTextChange: _this.props.onTextChange,\n      name: _this.props.name,\n      numberLength: _this.props.numberLength\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        disabled: nextProps.disabled,\n        value: nextProps.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.onTextChange(this.getEvent());\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.value && !this.state.value) {\n        this.handleChange({\n          target: {\n            value: nextState.value,\n            name: this.state.name\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          isValid = _this$state.isValid,\n          fieldType = _this$state.fieldType,\n          required = _this$state.required,\n          errorMessage = _this$state.errorMessage,\n          disabled = _this$state.disabled,\n          placeholder = _this$state.placeholder,\n          name = _this$state.name; // const err = isValid ? null : <p style={styles.error}>{errorMessage}</p>\n\n      return React.createElement(\"div\", {\n        style: styles.inputWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, fieldType === 'input' ? React.createElement(\"input\", {\n        onBlur: this.onBlur,\n        value: value,\n        required: required,\n        placeholder: placeholder,\n        disabled: disabled,\n        style: disabled ? styles.disabledInputField : styles.inputField,\n        onChange: this.handleChange,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }) : React.createElement(\"textarea\", {\n        onBlur: this.onBlur,\n        value: value,\n        required: required,\n        placeholder: placeholder,\n        disabled: disabled,\n        style: styles.inputField,\n        onChange: this.handleChange,\n        name: name,\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nvar styles = {\n  inputWrapper: {\n    fontSize: '13px'\n  },\n  inputContainer: {\n    backgroundColor: \"#FFF\",\n    padding: '8px'\n  },\n  disabledInputField: {\n    width: '100%',\n    backgroundColor: '#FFF',\n    padding: '0',\n    border: '0',\n    margin: '0',\n    outline: 'none',\n    fontSize: '13px'\n  },\n  inputField: {\n    width: '100%',\n    backgroundColor: '#FFF',\n    padding: '0',\n    border: '0',\n    margin: '0',\n    outline: 'none',\n    fontSize: '13px'\n  },\n  label: {\n    color: '#999999',\n    padding: '8px'\n  },\n  error: {\n    color: 'red',\n    padding: '2vw'\n  }\n};\nexport default Input;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/form/Input.js"],"names":["React","Colors","validateEmail","validateNum","validateDefaultInput","Input","props","handleChange","target","value","state","name","event","setState","type","isValid","onTextChange","getEvent","numberLength","required","tmpEvent","fieldType","errorMessage","disabled","placeholder","nextProps","nextContext","nextState","styles","inputWrapper","label","inputContainer","onBlur","disabledInputField","inputField","Component","fontSize","backgroundColor","padding","width","border","margin","outline","color","error"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Colors from '../../../constants/Colors'\nimport { validateEmail, validateNum, validateDefaultInput } from '../../Helpers/FormValidation/InputValidation'\n\nclass Input extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: this.props.value ? this.props.value : '',\n            isValid: !!this.props.value,\n            fieldType: this.props.fieldType,\n            required: this.props.required ? this.props.required : false,\n            errorMessage: this.props.errorMessage,\n            disabled: this.props.disabled,\n            placeholder: this.props.placeholder ? this.props.placeholder : null,\n            onTextChange: this.props.onTextChange,\n            name: this.props.name,\n            numberLength: this.props.numberLength,\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            disabled: nextProps.disabled,\n            value: nextProps.value\n        })\n    }\n\n    componentDidMount() {\n        this.state.onTextChange(this.getEvent())\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (nextState.value && !this.state.value) {\n            this.handleChange({\n                target: { value: nextState.value, name: this.state.name }\n            });\n        }\n    }\n\n\n    onBlur = () => {\n        this.handleChange({\n            target: { value: this.state.value, name: this.state.name }\n        })\n    }\n\n    handleChange = ( event ) => {\n        this.setState({ value: event.target.value }, ()=>{\n            switch(this.state.type){\n                case 'email':\n                    this.setState({\n                        isValid: validateEmail(this.state.value),\n                    }, () => {\n                        this.state.onTextChange(this.getEvent())\n                    })\n                    break\n\n                case 'number':\n                    this.setState({\n                        isValid: validateNum(this.state.value, this.state.numberLength),\n                    }, () => {\n                        this.state.onTextChange(this.getEvent())\n                    })\n                    break\n\n                default:\n                    this.setState({\n                        isValid: this.state.required ? validateDefaultInput(this.state.value) : true\n                    }, () => {\n                        this.state.onTextChange(this.getEvent())\n                    })\n                    break\n            }\n        })\n    }\n\n    getEvent = () => {\n        let tmpEvent = {};\n        tmpEvent.target = { isValid: this.state.isValid, name: this.state.name, value: this.state.value }\n        return tmpEvent ;\n    }\n\n    render(){\n        const { value, isValid, fieldType, required, errorMessage, disabled, placeholder, name } = this.state\n        // const err = isValid ? null : <p style={styles.error}>{errorMessage}</p>\n        return (\n            <div style={styles.inputWrapper}>\n                <p style={styles.label}>{ name }</p>\n                <div style={styles.inputContainer}>\n                    {\n                        fieldType === 'input' ?\n                            <input\n                                onBlur={this.onBlur}\n                                value={value}\n                                required={required}\n                                placeholder={placeholder}\n                                disabled={disabled}\n                                style={ disabled ? styles.disabledInputField : styles.inputField}\n                                onChange={this.handleChange}\n                                name={name} />\n                                :\n                            <textarea\n                                onBlur={this.onBlur}\n                                value={value}\n                                required={required}\n                                placeholder={placeholder}\n                                disabled={disabled}\n                                style={styles.inputField}\n                                onChange={this.handleChange}\n                                name={name}\n                                rows=\"5\"/>\n                    }\n                </div>\n                {/*{ err }*/}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    inputWrapper: {\n      fontSize: '13px'\n    },\n    inputContainer: {\n        backgroundColor: \"#FFF\",\n        padding: '8px'\n    },\n    disabledInputField: {\n        width:'100%',\n        backgroundColor:'#FFF',\n        padding: '0',\n        border:'0',\n        margin: '0',\n        outline:'none',\n        fontSize: '13px',\n    },\n    inputField: {\n        width:'100%',\n        backgroundColor:'#FFF',\n        padding: '0',\n        border:'0',\n        margin: '0',\n        outline:'none',\n        fontSize: '13px'\n    },\n    label: {\n        color:'#999999',\n        padding:'8px'\n    },\n    error: {\n        color:'red',\n        padding:'2vw'\n    },\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}