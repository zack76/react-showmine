{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Colors from \"../../constants/Colors\";\nimport { Button, TextArea, ActionSheet, Switch, Radio, Cells, CellsTitle, Cell, CellHeader, CellBody, CellFooter, Form, FormCell, Input, Label, LoadMore, Toast } from 'react-weui';\nimport CheckoutItemList from \"./CheckoutItemList\";\nimport PaymentService from '../../service/PaymentService';\nimport Lang from \"../../lang/Lang\";\nimport CartService from \"../../service/CartService\";\n\nvar CheckoutView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckoutView, _React$Component);\n\n  function CheckoutView(props) {\n    var _this;\n\n    _classCallCheck(this, CheckoutView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckoutView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getCompanyPickupLocations\", function () {\n      var tmpLocations = false;\n\n      if (_this.state.company.pickup_locations && _this.state.company.pickup_locations.length > 0) {\n        _this.setState({\n          pickupLocationList: _this.state.company.pickup_locations\n        });\n      } else {\n        _this.setState({\n          pickupLocationList: tmpLocations\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputFieldChange\", function (event) {\n      var params = _this.state.params;\n      params[event.target.name] = event.target.value;\n\n      _this.setState({\n        params: params\n      }, function () {\n        console.log(_this.state);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showHideLocationMenu\", function () {\n      _this.setState(function (prevState) {\n        return {\n          showLocationPopup: !prevState.showLocationPopup\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePickupLocation\", function (location) {\n      var params = _this.state.params;\n      params.location = location;\n\n      _this.setState({\n        params: params\n      }, function () {\n        _this.showHideLocationMenu();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createOrder\", function () {\n      PaymentService.createOrder(params).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this.setState({\n          cartItems: cartItems,\n          selectedItemList: cartItems\n        }, function () {\n          _this.CalculateTotalCost(cartItems);\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n\n    _this.state = {\n      parentItem: _this.props.parentItem,\n      selectedList: _this.props.selectedList,\n      company: _this.props.parentItem.company ? _this.props.parentItem.company : undefined,\n      params: {\n        name: '',\n        contactNum: '',\n        notes: '',\n        address: '',\n        location: {}\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CheckoutView, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        selectedList: nextProps.selectedList\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCompanyPickupLocations();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedList = this.state.selectedList;\n      console.log(selectedList);\n      var pickupLocationList = this.state.pickupLocationList;\n      var locationMenu = undefined;\n\n      if (pickupLocationList) {\n        locationMenu = pickupLocationList.map(function (location) {\n          return React.createElement(ActionSheet, {\n            key: location.id,\n            menus: [{\n              label: location.title,\n              onClick: function onClick() {\n                _this2.updatePickupLocation(location);\n              }\n            }],\n            actions: [{\n              label: '关闭',\n              onClick: function onClick() {\n                return _this2.showHideLocationMenu();\n              }\n            }],\n            show: _this2.state.showLocationPopup,\n            type: \"ios\",\n            onRequestClose: function onRequestClose() {\n              return _this2.showHideLocationMenu();\n            }\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: styles.viewWrapper\n      }, React.createElement(CellsTitle, null, \"\\u53D6\\u8D27\\u5730\\u70B9*\"), React.createElement(Cells, null, React.createElement(Cell, {\n        access: true\n      }, React.createElement(CellBody, {\n        onClick: function onClick() {\n          _this2.showHideLocationMenu();\n        }\n      }, this.state.params.location.id ? this.state.params.location.title : React.createElement(\"span\", null, \"\\u8BF7\\u9009\\u62E9\\u53D6\\u8D27\\u5730\\u70B9\")), React.createElement(CellFooter, null))), React.createElement(CellsTitle, null, \"\\u8054\\u7CFB\\u65B9\\u5F0F*\"), React.createElement(Form, null, React.createElement(FormCell, null, React.createElement(CellHeader, null, React.createElement(Label, null, \"\\u59D3\\u540D\")), React.createElement(CellBody, null, React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n        name: \"name\",\n        value: this.state.contactName,\n        onChange: this.handleInputFieldChange\n      }))), React.createElement(FormCell, null, React.createElement(CellHeader, null, React.createElement(Label, null, \"\\u8054\\u7CFB\\u7535\\u8BDD\")), React.createElement(CellBody, null, React.createElement(Input, {\n        type: \"number\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\",\n        name: \"contactNum\",\n        value: this.state.contactNum,\n        onChange: this.handleInputFieldChange\n      }))), React.createElement(FormCell, null, React.createElement(CellHeader, null, React.createElement(Label, null, \"\\u5730\\u5740\")), React.createElement(CellBody, null, React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5730\\u5740\",\n        name: \"address\",\n        value: this.state.contactAddress,\n        onChange: this.handleInputFieldChange\n      })))), React.createElement(CellsTitle, null, \"\\u5907\\u6CE8\"), React.createElement(Form, null, React.createElement(FormCell, null, React.createElement(CellBody, null, React.createElement(TextArea, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u6587\\u672C\",\n        rows: \"3\",\n        name: \"notes\",\n        value: this.state.notes,\n        onChange: this.handleInputFieldChange\n      })))), React.createElement(CellsTitle, null, \"\\u5171\", selectedList.length, \"\\u4EF6\\u5546\\u54C1\"), React.createElement(Cells, null, React.createElement(CheckoutItemList, {\n        children: selectedList\n      })), React.createElement(\"div\", {\n        style: styles.buttonGroupContainer\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          _this2.checkLoginStatus();\n        }\n      }, \"\\u786E\\u8BA4\\u8BA2\\u5355\")), locationMenu);\n    }\n  }]);\n\n  return CheckoutView;\n}(React.Component);\n\nvar styles = {\n  viewWrapper: {\n    backgroundColor: Colors.formBackground,\n    paddingTop: '1vw'\n  },\n  buttonGroupContainer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    backgroundColor: '#fff',\n    color: '#fff',\n    textAlign: 'center'\n  }\n};\nexport default CheckoutView;","map":null,"metadata":{},"sourceType":"module"}