{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/ItemDetails/RegistrationDetails/RegistrationFields.js\";\nimport React, { Component } from 'react';\nimport Colors from \"../../../constants/Colors\";\nimport Input from '../../../components/Common/form/Input';\n\nvar RegistrationFields =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegistrationFields, _Component);\n\n  function RegistrationFields(props) {\n    var _this;\n\n    _classCallCheck(this, RegistrationFields);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrationFields).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"extractFieldsFromConfig\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n\n      _this.setState({\n        inputFields: tmpConfig.inputFields && tmpConfig.inputFields.length > 0 ? tmpConfig.inputFields : undefined\n      }, function () {\n        _this.initFormTemplate();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initFormTemplate\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n      var tmpFormValues = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(tmpConfig.inputFields), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var field = _step.value;\n          tmpFormValues.push({\n            'title': field.title,\n            'value': '',\n            'isValid': false,\n            'type': field.type\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: tmpFormValues\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"extractValuesFromConfig\", function (tmpFormValues, tmpRegistrationObj) {\n      var valueArray = JSON.parse(tmpRegistrationObj.config);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(tmpFormValues), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var formValue = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _getIterator(valueArray), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var value = _step3.value;\n\n              if (formValue.title === value.title) {\n                formValue.value = value.value;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: tmpFormValues\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var formValues = _this.state.formValues;\n      var _isValidForm = true;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = _getIterator(formValues), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var formValue = _step4.value;\n\n          if (formValue.title === event.target.name) {\n            formValue.value = event.target.value;\n            formValue.isValid = event.target.isValid;\n          }\n\n          if (!formValue.isValid) {\n            _isValidForm = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: formValues,\n        isValidForm: _isValidForm\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _this.state = {\n      callbackUpdateForm: _this.props.callbackUpdateForm,\n      config: _this.props.item.config,\n      isParticipated: _this.props.isParticipated,\n      formValues: undefined,\n      inputFields: [],\n      isValidForm: false,\n      isEditing: _this.props.isEditing,\n      registrationObj: _this.props.registrationObj\n    };\n    return _this;\n  }\n\n  _createClass(RegistrationFields, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        isParticipated: nextProps.isParticipated,\n        isEditing: nextProps.isEditing,\n        registrationObj: nextProps.registrationObj\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.extractFieldsFromConfig();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.registrationObj && !this.state.registrationObj) {\n        this.extractValuesFromConfig(this.state.formValues, nextState.registrationObj);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formValues = _this$state.formValues,\n          isEditing = _this$state.isEditing,\n          isParticipated = _this$state.isParticipated;\n      var errMsg = 'error!';\n      var placeholder = '请输入';\n      var disableForm = !isEditing && isParticipated;\n\n      if (formValues) {\n        return React.createElement(\"div\", {\n          style: styles.formWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, formValues.map(function (field, index) {\n          var type = field.type,\n              title = field.title,\n              value = field.value;\n          return React.createElement(Input, {\n            key: index,\n            name: title,\n            required: true,\n            errorMessage: errMsg,\n            placeholder: placeholder + title,\n            fieldType: type,\n            value: value,\n            disabled: disableForm,\n            onTextChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        }), React.createElement(\"div\", {\n          style: Colors.style.bottomDivider,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }));\n      } else return null;\n    }\n  }]);\n\n  return RegistrationFields;\n}(Component);\n\nvar styles = {\n  formWrapper: {\n    backgroundColor: Colors.formBackground\n  },\n  inputField: {\n    fontSize: '14px'\n  }\n};\nexport default RegistrationFields;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/ItemDetails/RegistrationDetails/RegistrationFields.js"],"names":["React","Component","Colors","Input","RegistrationFields","props","tmpConfig","JSON","parse","state","config","setState","inputFields","length","undefined","initFormTemplate","tmpFormValues","field","push","title","type","formValues","callbackUpdateForm","isValidForm","tmpRegistrationObj","valueArray","formValue","value","event","_isValidForm","target","name","isValid","item","isParticipated","isEditing","registrationObj","nextProps","nextContext","extractFieldsFromConfig","nextState","extractValuesFromConfig","errMsg","placeholder","disableForm","styles","formWrapper","map","index","handleChange","style","bottomDivider","backgroundColor","formBackground","inputField","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Colors from \"../../../constants/Colors\"\nimport Input from '../../../components/Common/form/Input'\n\nclass RegistrationFields extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            callbackUpdateForm: this.props.callbackUpdateForm,\n            config: this.props.item.config,\n            isParticipated: this.props.isParticipated,\n            formValues: undefined,\n            inputFields: [],\n            isValidForm: false,\n            isEditing: this.props.isEditing,\n            registrationObj: this.props.registrationObj\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            isParticipated: nextProps.isParticipated,\n            isEditing: nextProps.isEditing,\n            registrationObj: nextProps.registrationObj\n        })\n    }\n\n    componentDidMount() {\n        this.extractFieldsFromConfig();\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (nextState.registrationObj && !this.state.registrationObj) {\n            this.extractValuesFromConfig(this.state.formValues, nextState.registrationObj);\n        }\n    }\n\n    extractFieldsFromConfig = () => {\n        let tmpConfig = JSON.parse(this.state.config)\n        this.setState({\n            inputFields: tmpConfig.inputFields && tmpConfig.inputFields.length > 0 ? tmpConfig.inputFields : undefined\n        }, ()=> {\n            this.initFormTemplate()\n        })\n    }\n\n    initFormTemplate = () => {\n        let tmpConfig = JSON.parse(this.state.config)\n        let tmpFormValues = []\n        for (let field of tmpConfig.inputFields) {\n            tmpFormValues.push({\n                'title': field.title,\n                'value': '',\n                'isValid': false,\n                'type': field.type\n            })\n        }\n        this.setState({ formValues: tmpFormValues }, () => {\n            this.state.callbackUpdateForm(this.state.formValues, this.state.isValidForm)\n        })\n\n    }\n\n    extractValuesFromConfig = (tmpFormValues, tmpRegistrationObj) => {\n        let valueArray = JSON.parse(tmpRegistrationObj.config)\n        for (let formValue of tmpFormValues) {\n            for (let value of valueArray) {\n                if (formValue.title === value.title) {\n                    formValue.value = value.value\n                }\n            }\n        }\n        this.setState({ formValues: tmpFormValues }, () => {\n            this.state.callbackUpdateForm(this.state.formValues, this.state.isValidForm)\n        })\n    }\n\n    handleChange = event => {\n        let { formValues } = this.state\n        let _isValidForm = true;\n        for (let formValue of formValues) {\n            if (formValue.title === event.target.name) {\n                formValue.value = event.target.value\n                formValue.isValid = event.target.isValid\n            }\n            if (!formValue.isValid) {\n                _isValidForm = false\n            }\n        }\n        this.setState({\n            formValues: formValues,\n            isValidForm: _isValidForm\n        }, () => {\n            this.state.callbackUpdateForm(this.state.formValues, this.state.isValidForm)\n        })\n    }\n\n    render(){\n        const { formValues, isEditing, isParticipated } = this.state\n        const errMsg = 'error!'\n        const placeholder = '请输入'\n        const disableForm = !isEditing && isParticipated\n        if (formValues) {\n            return (\n                <div style={styles.formWrapper}>\n                    {formValues.map((field, index) => {\n                        let { type, title, value } = field\n                        return ( <Input key={index}\n                                        name={title}\n                                        required={true}\n                                        errorMessage={errMsg}\n                                        placeholder={placeholder + title}\n                                        fieldType={type}\n                                        value={value}\n                                        disabled={disableForm}\n                                        onTextChange={this.handleChange} /> )\n                    })}\n                    <div style={Colors.style.bottomDivider}/>\n                </div>\n            )\n        }\n        else return null\n    }\n}\n\nconst styles = {\n    formWrapper: {\n        backgroundColor: Colors.formBackground\n    },\n    inputField: {\n        fontSize: '14px'\n    }\n}\n\nexport default RegistrationFields\n\n\n"]},"metadata":{},"sourceType":"module"}