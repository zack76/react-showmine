{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\nimport Colors from \"../../../constants/Colors\";\nimport ItemService from \"../../../service/ItemService\";\nimport \"weui\";\nimport \"react-weui/build/packages/react-weui.css\";\nimport { Button, Popup, Article, CellsTitle, Form, FormCell, CellBody, TextArea, Dialog, Toast } from \"react-weui/build/packages\";\nimport UtilsService from \"../../../service/UtilsService\";\nimport { Config } from \"../../../Config\";\nimport AuthService from \"../../../service/AuthService\";\nimport Modal from \"react-modal\";\n\nvar ArticleComments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ArticleComments, _Component);\n\n  function ArticleComments(props) {\n    var _this;\n\n    _classCallCheck(this, ArticleComments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArticleComments).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getItemNormalCommentList\", function () {\n      var params = {};\n      ItemService.getItemNormalCommentList(_this.state.item.id, params).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this.setState({\n          commentList: responseJson.data\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"postItemNormalComment\", function () {\n      _this.setState({\n        disabled: true,\n        showLoading: true\n      });\n\n      var params = {\n        comments: _this.state.newComment,\n        item_url: \"https://react.showmine66.com/itemDetails?itemId=\" + _this.state.item.id,\n        is_broadcast: false,\n        is_private: false,\n        state_redirect_obj: {\n          url: UtilsService.getWebAddress() // url: \"http://localhost:3000\",\n\n        },\n        wechat_auth_url: \"http://localhost:8888/a/wu?domain=http%253A%252F%252Flocalhost%253A8888&origurl=http%253A%252F%252Flocalhost%253A8888%252Fma%252Fi%252Ff187861730fbfe9cf62b110013bcfc4d%252F%2523app-top\"\n      };\n      ItemService.postItemNormalComment(_this.state.item.id, params).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this.setState({\n          res: responseJson,\n          newComment: false\n        });\n\n        _this.state.loadingTimer = setTimeout(function () {\n          _this.setState({\n            showLoading: false\n          }, function () {\n            _this.setState({\n              fullpage_show: false,\n              disabled: false\n            }, function () {\n              _this.showToast();\n            });\n          });\n        }, 1000);\n\n        _this.getItemNormalCommentList();\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoginStatus\", function () {\n      if (_this.state.subscribeLoginLogId) {\n        AuthService.checkLoginStatus(_this.state.subscribeLoginLogId || null).then(function (response) {\n          return response.text();\n        }).then(function (resp) {\n          var res = JSON.parse(resp);\n\n          if (res.log && res.log.tmp_token && res.log.tmp_token.trim() !== '') {\n            _this.setState({\n              loading: true\n            });\n\n            _this.loginWithTempCode(res.log.tmp_token.trim());\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginWithTempCode\", function (tmpToken) {\n      AuthService.loginWithTempCode(tmpToken).then(function (response) {\n        return response.text();\n      }).then(function (resp) {\n        var res = JSON.parse(resp);\n\n        if (res.return_code) {\n          localStorage.setItem('userToken', res.return_code);\n          localStorage.setItem('isLogIn', true);\n        }\n\n        var params = {};\n        AuthService.getMe(params).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          localStorage.setItem('userObject', _JSON$stringify(responseJson));\n        }).then(function () {\n          location.reload();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLogin\", function () {\n      var item = _this.props.item;\n\n      if (UtilsService.openedInWeChat()) {\n        _this.weChatLogin();\n      } else {\n        var getLoginStatus = _this.getLoginStatus;\n        var params = {\n          companyId: item && item.company && item.company.id,\n          itemId: item && item.id\n        };\n        AuthService.getLoginSubscribeQrCode(params).then(function (response) {\n          return response.text();\n        }).then(function (resp) {\n          var res = JSON.parse(resp);\n          var interval = setInterval(getLoginStatus, 1000);\n\n          _this.setState({\n            qrUrl: res.qrcode,\n            subscribeLoginLogId: res.subscribeLoginLogId,\n            showModal: true,\n            interval: interval\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      if (_this.props.isLogin) {\n        _this.setState({\n          fullpage_show: true\n        });\n      } else {\n        _this.handleLogin();\n      }\n    });\n\n    _this.state = {\n      disabled: false,\n      showToast: false,\n      showLoading: false,\n      toastTimer: null,\n      loadingTimer: null,\n      item: _this.props.item,\n      defaultImage: \"../../../static/assets/default_item.png\",\n      newComment: false,\n      showDialog: false,\n      dialog: {\n        title: \"确认删除此条留言？\",\n        buttons: [{\n          type: \"default\",\n          label: \"取消\",\n          onClick: _this.hideDialog.bind(_assertThisInitialized(_this))\n        }, {\n          type: \"warn\",\n          label: \"确认\",\n          onClick: _this.deleteComment.bind(_assertThisInitialized(_this))\n        }]\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.showToast = _this.showToast.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ArticleComments, [{\n    key: \"hideDialog\",\n    value: function hideDialog() {\n      this.setState({\n        showDialog: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        newComment: e.target.value\n      });\n    }\n  }, {\n    key: \"deleteComment\",\n    value: function deleteComment() {\n      var _this2 = this;\n\n      this.setState({\n        showLoading: true\n      });\n      this.hideDialog();\n      var params = {\n        item_url: \"https://www.showmine66.com/ma/i/\" + this.state.item.id\n      };\n      ItemService.updateItemNormalComment(this.state.targetComment, params).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          showLoading: false,\n          res: responseJson\n        }, function () {\n          _this2.showToast();\n        });\n\n        _this2.getItemNormalCommentList();\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getItemNormalCommentList();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.loadingTimer && clearTimeout(this.state.loadingTimer);\n      this.state.toastTimer && clearTimeout(this.state.toastTimer);\n      clearInterval(this.state.interval);\n    }\n  }, {\n    key: \"showToast\",\n    value: function showToast() {\n      var _this3 = this;\n\n      this.setState({\n        showToast: true\n      });\n      this.state.toastTimer = setTimeout(function () {\n        _this3.setState({\n          showToast: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"weChatLogin\",\n    value: function weChatLogin() {\n      var origUrl = window.location.href;\n      var authUrl = Config.webAddress + \"AuthPage\";\n      AuthService.wechatLogin(origUrl, authUrl, {}).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        window.open(responseJson.auth_url, \"_self\");\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var isAdmin = this.props.isAdmin ? this.props.isAdmin : false;\n      var commentList = this.state.commentList;\n      var commentListComponent = undefined;\n\n      if (commentList && commentList.length > 0) {\n        commentListComponent = commentList.map(function (comment, id) {\n          var user = comment.created_by;\n          var imageUrl = user.avatar_img && user.avatar_img > \"\" ? user.avatar_img : _this4.state.defaultImage;\n          return React.createElement(\"div\", {\n            key: id,\n            style: styles.commentBody\n          }, React.createElement(\"div\", {\n            style: styles.avatarWrapper\n          }, React.createElement(\"img\", {\n            src: imageUrl,\n            style: styles.avatar\n          })), React.createElement(\"div\", {\n            style: styles.nameNComment\n          }, React.createElement(\"p\", {\n            style: styles.name\n          }, user.nick_name), React.createElement(\"p\", {\n            style: styles.commentText\n          }, comment.comments)), isAdmin ? React.createElement(\"div\", null, React.createElement(Button, {\n            type: \"warn\",\n            size: \"small\",\n            onClick: function onClick(e) {\n              return _this4.setState({\n                showDialog: true,\n                targetComment: comment.id\n              });\n            }\n          }, \"\\u5220\\u9664\"), React.createElement(Dialog, {\n            type: \"ios\",\n            title: _this4.state.dialog.title,\n            buttons: _this4.state.dialog.buttons,\n            show: _this4.state.showDialog\n          }, \"\\u5220\\u9664\\u540E\\u65E0\\u6CD5\\u64A4\\u56DE\")) : \"\");\n        });\n      }\n\n      var customStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      };\n      return React.createElement(\"div\", {\n        style: styles.commentWrapper\n      }, React.createElement(Toast, {\n        icon: \"loading\",\n        show: this.state.showLoading\n      }, \"\\u8BF7\\u7A0D\\u540E...\"), React.createElement(Toast, {\n        icon: \"success-no-circle\",\n        show: this.state.showToast\n      }, \"\\u6210\\u529F\"), commentListComponent ? React.createElement(\"div\", {\n        style: styles.commentHeader\n      }, React.createElement(\"div\", null, \"\\u7CBE\\u9009\\u7559\\u8A00\"), React.createElement(\"div\", {\n        style: {\n          color: Colors.fontColorLink\n        },\n        onClick: function onClick(e) {\n          return _this4.handleClick();\n        }\n      }, \"\\u5199\\u7559\\u8A00\")) : React.createElement(\"div\", {\n        style: styles.noCommentHint\n      }, React.createElement(\"div\", {\n        style: {\n          color: Colors.fontColorLink\n        },\n        onClick: function onClick(e) {\n          return _this4.handleClick();\n        }\n      }, \"\\u5199\\u7559\\u8A00\")), React.createElement(\"div\", {\n        style: styles.commentHeader\n      }, React.createElement(Popup, {\n        show: this.state.fullpage_show,\n        onRequestClose: function onRequestClose(e) {\n          return _this4.setState({\n            fullpage_show: false\n          });\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          height: \"100vh\",\n          overflow: \"scroll\"\n        }\n      }, React.createElement(Article, null, React.createElement(Toast, {\n        icon: \"loading\",\n        show: this.state.showLoading\n      }, \"\\u8BF7\\u7A0D\\u540E...\"), React.createElement(CellsTitle, {\n        style: {\n          marginTop: \"40px\"\n        }\n      }, \"\\u65B0\\u5EFA\\u7559\\u8A00\"), React.createElement(Form, {\n        style: {\n          marginBottom: \"20px\"\n        }\n      }, React.createElement(FormCell, null, React.createElement(CellBody, null, React.createElement(TextArea, {\n        placeholder: \"\\u7559\\u8A00\\u540E\\u5C06\\u5BF9\\u6240\\u6709\\u4EBA\\u53EF\\u89C1\\uFF0C\\u6700\\u591A50\\u5B57\",\n        rows: 3,\n        maxLength: 50,\n        onChange: this.handleChange\n      })))), React.createElement(Button, {\n        type: \"primary\",\n        plain: true,\n        disabled: !this.state.newComment || this.state.disabled,\n        onClick: function onClick(e) {\n          return _this4.postItemNormalComment();\n        }\n      }, \"\\u53D1\\u5E03\\u7559\\u8A00\"), React.createElement(Button, {\n        type: \"warn\",\n        onClick: function onClick(e) {\n          return _this4.setState({\n            fullpage_show: false\n          });\n        }\n      }, \"\\u53D6\\u6D88\"))))), commentListComponent, React.createElement(Modal, {\n        isOpen: this.state.showModal // onAfterOpen={() => {this.getQrCode(item)}}\n        ,\n        onRequestClose: function onRequestClose() {\n          _this4.setState({\n            showModal: false\n          });\n        },\n        style: customStyles,\n        contentLabel: \"Example Modal\"\n      }, React.createElement(\"div\", {\n        style: styles.qrTitle\n      }, \"\\u626B\\u7801\\u5173\\u6CE8\\u8BE5\\u516C\\u53F8\"), React.createElement(\"div\", {\n        style: styles.qrTitle\n      }, React.createElement(\"small\", null, \"\\u5C06\\u66F4\\u53CA\\u65F6\\u7684\\u6536\\u5230\\u63A8\\u9001\")), React.createElement(\"img\", {\n        style: styles.qrcode,\n        src: this.state.qrUrl\n      })), React.createElement(Toast, {\n        icon: \"success-no-circle\",\n        show: this.state.success\n      }, \"Success\"), React.createElement(Toast, {\n        icon: \"loading\",\n        show: this.state.loading\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return ArticleComments;\n}(Component);\n\nvar styles = {\n  commentWrapper: {\n    backgroundColor: Colors.formBackground,\n    padding: \"4vw\",\n    fontSize: \"14px\"\n  },\n  commentHeader: {\n    color: Colors.formFontGray,\n    paddingBottom: \"20px\",\n    display: \"flex\",\n    WebkitBoxPack: \"justify\",\n    WebkitJustifyContent: \"space-between\",\n    MsFlexPack: \"justify\",\n    justifyContent: \"space-between\"\n  },\n  noCommentHint: {\n    color: Colors.formFontGray,\n    textAlign: \"center\",\n    paddingBottom: \"20px\"\n  },\n  commentBody: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingBottom: \"20px\"\n  },\n  avatarWrapper: {\n    flex: \"1\"\n  },\n  avatar: {\n    width: \"32px\",\n    height: \"32px\",\n    borderRadius: \"4px\"\n  },\n  nameNComment: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"10\",\n    paddingLeft: \"3vw\",\n    lineHeight: \"normal\"\n  },\n  name: {\n    color: Colors.formFontGray\n  },\n  commentText: {\n    color: Colors.fontColor,\n    paddingRight: \"5vw\"\n  }\n};\nexport default ArticleComments;","map":null,"metadata":{},"sourceType":"module"}