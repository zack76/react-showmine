{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM_React/shm-react/my-app/components/Cart/CartList.js\";\nimport React from 'react';\nimport CartService from \"../../service/CartService\";\nimport CartListItem from \"../../components/Cart/CartListItem\";\n\nvar CartList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CartList, _React$Component);\n\n  function CartList(props) {\n    var _this;\n\n    _classCallCheck(this, CartList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CartList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTotalPrice\", function (price) {\n      console.log(price);\n    });\n\n    _this.state = {\n      companyId: _this.props.companyId,\n      emptyCart: _this.props.emptyCart ? _this.props.emptyCart : null\n    };\n    return _this;\n  }\n\n  _createClass(CartList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.emptyCart) {\n        console.log('3');\n        this.setState({\n          cartItems: this.props.emptyCart\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCartItems();\n    }\n  }, {\n    key: \"getCartItems\",\n    value: function getCartItems() {\n      var _this2 = this;\n\n      var companyId = this.state.companyId;\n      CartService.getCartItems(companyId).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          cartItems: responseJson && responseJson[0] && responseJson[0].cartitems ? responseJson[0].cartitems : []\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cartItems = this.state.cartItems;\n      var updateTotalPrice = this.updateTotalPrice;\n\n      if (cartItems) {\n        return React.createElement(\"div\", {\n          style: styles.listWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, cartItems.map(function (item, index) {\n          return React.createElement(CartListItem, {\n            item: item,\n            key: index,\n            callbackUpdatePrice: updateTotalPrice,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        }));\n      } else return null;\n    }\n  }]);\n\n  return CartList;\n}(React.Component);\n\nvar styles = {\n  listWrapper: {\n    width: '100%'\n  }\n};\nexport default CartList;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM_React/shm-react/my-app/components/Cart/CartList.js"],"names":["React","CartService","CartListItem","CartList","props","price","console","log","state","companyId","emptyCart","nextProps","nextContext","setState","cartItems","getCartItems","then","response","json","responseJson","cartitems","catch","error","updateTotalPrice","styles","listWrapper","map","item","index","Component","width"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;;AADc,uEAmCC,UAACC,KAAD,EAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KArCiB;;AAEd,UAAKG,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,MAAKL,KAAL,CAAWK,SADb;AAETC,MAAAA,SAAS,EAAE,MAAKN,KAAL,CAAWM,SAAX,GAAuB,MAAKN,KAAL,CAAWM,SAAlC,GAA8C;AAFhD,KAAb;AAFc;AAMjB;;;;8CAEyBC,S,EAAWC,W,EAAa;AAC9C,UAAID,SAAS,CAACD,SAAd,EAAyB;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAKM,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWM;AADZ,SAAd;AAGH;AACJ;;;wCAEmB;AAChB,WAAKK,YAAL;AACH;;;mCAEc;AAAA;;AACX,UAAIN,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;AACAR,MAAAA,WAAW,CAACc,YAAZ,CAAyBN,SAAzB,EACKO,IADL,CACU,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAACG,YAAD,EAAkB;AACpB,QAAA,MAAI,CAACN,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAEK,YAAY,IAAIA,YAAY,CAAC,CAAD,CAA5B,IAAmCA,YAAY,CAAC,CAAD,CAAZ,CAAgBC,SAAnD,GAA+DD,YAAY,CAAC,CAAD,CAAZ,CAAgBC,SAA/E,GAA2F;AAD5F,SAAd;AAGH,OANL,EAOKC,KAPL,CAOW,UAACC,KAAD,EAAW;AACdhB,QAAAA,OAAO,CAACgB,KAAR,CAAcA,KAAd;AACH,OATL;AAUH;;;6BAMO;AACJ,UAAMR,SAAS,GAAG,KAAKN,KAAL,CAAWM,SAA7B;AACA,UAAMS,gBAAgB,GAAG,KAAKA,gBAA9B;;AACA,UAAIT,SAAJ,EAAe;AACX,eACI;AAAK,UAAA,KAAK,EAAEU,MAAM,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQX,SAAS,CAACY,GAAV,CAAc,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAC9B,iBACI,oBAAC,YAAD;AAAc,YAAA,IAAI,EAAED,IAApB;AAA0B,YAAA,GAAG,EAAEC,KAA/B;AAAsC,YAAA,mBAAmB,EAAEL,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAEE,SAHN,CAFR,CADJ;AAUH,OAXD,MAYK,OAAO,IAAP;AACR;;;;EAxDkBvB,KAAK,CAAC6B,S;;AA2D7B,IAAML,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTK,IAAAA,KAAK,EAAE;AADE;AADF,CAAf;AAOA,eAAe3B,QAAf","sourcesContent":["import React from 'react';\nimport CartService from \"../../service/CartService\";\nimport CartListItem from \"../../components/Cart/CartListItem\";\n\nclass CartList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            companyId: this.props.companyId,\n            emptyCart: this.props.emptyCart ? this.props.emptyCart : null\n        };\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.emptyCart) {\n            console.log('3');\n            this.setState({\n                cartItems: this.props.emptyCart\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.getCartItems();\n    }\n\n    getCartItems() {\n        let companyId = this.state.companyId;\n        CartService.getCartItems(companyId)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                this.setState({\n                    cartItems: responseJson && responseJson[0] && responseJson[0].cartitems ? responseJson[0].cartitems : []\n                });\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    updateTotalPrice = (price) => {\n        console.log(price);\n    };\n\n    render(){\n        const cartItems = this.state.cartItems;\n        const updateTotalPrice = this.updateTotalPrice;\n        if (cartItems) {\n            return (\n                <div style={styles.listWrapper}>\n                    {\n                        cartItems.map(function(item,index){\n                            return (\n                                <CartListItem item={item} key={index} callbackUpdatePrice={updateTotalPrice}/>\n                            )})\n                    }\n                </div>\n            )\n        }\n        else return null;\n    }\n}\n\nconst styles = {\n    listWrapper: {\n        width: '100%'\n    },\n};\n\n\nexport default CartList;\n"]},"metadata":{},"sourceType":"module"}