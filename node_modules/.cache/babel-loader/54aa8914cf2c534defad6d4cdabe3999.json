{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM_React/shm-react/my-app/components/ItemDetails/RegistrationDetails/RegistrationFields.js\";\nimport React, { Component } from 'react';\nimport Colors from \"../../../constants/Colors\";\nimport { Button, TextArea, Radio, Cells, CellsTitle, Cell, CellHeader, CellBody, CellFooter, Form, FormCell, Label } from 'react-weui';\nimport Input from '../../../components/Common/form/Input';\n\nvar RegistrationFields =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegistrationFields, _Component);\n\n  function RegistrationFields(props) {\n    var _this;\n\n    _classCallCheck(this, RegistrationFields);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrationFields).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"initFormTemplate\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n      var tmpFormValues = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(tmpConfig.inputFields), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var field = _step.value;\n          tmpFormValues.push({\n            'title': field.title,\n            'value': ''\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: tmpFormValues\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"extractFieldsFromConfig\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n\n      _this.setState({\n        inputFields: tmpConfig.inputFields && tmpConfig.inputFields.length > 0 ? tmpConfig.inputFields : undefined\n      }, function () {\n        _this.initFormTemplate();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var formValues = _this.state.formValues;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(formValues), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var formValue = _step2.value;\n\n          if (formValue.title === event.target.name) {\n            formValue.value = event.target.value;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      _this.setState({\n        formArray: formValues\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formArray);\n      });\n    });\n\n    _this.state = {\n      callbackUpdateForm: _this.props.callbackUpdateForm,\n      config: _this.props.item.config,\n      isParticipated: _this.props.isParticipated,\n      formValues: {},\n      formArray: []\n    };\n    return _this;\n  }\n\n  _createClass(RegistrationFields, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.extractFieldsFromConfig();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        isParticipated: nextProps.isParticipated\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          inputFields = _this$state.inputFields,\n          isParticipated = _this$state.isParticipated;\n      var errMsg = 'error!';\n      var placeholder = '请输入';\n\n      if (inputFields && !isParticipated) {\n        return React.createElement(\"div\", {\n          style: styles.formWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, inputFields.map(function (field, index) {\n          var type = field.type,\n              title = field.title;\n          return React.createElement(Input, {\n            key: index,\n            name: title,\n            required: true,\n            errorMessage: errMsg,\n            placeholder: placeholder + title,\n            fieldType: type,\n            value: \"\",\n            onTextChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n        }));\n      } else return null;\n    }\n  }]);\n\n  return RegistrationFields;\n}(Component);\n\nvar styles = {\n  formWrapper: {\n    backgroundColor: Colors.formBackground\n  },\n  inputField: {\n    fontSize: '14px'\n  }\n};\nexport default RegistrationFields;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM_React/shm-react/my-app/components/ItemDetails/RegistrationDetails/RegistrationFields.js"],"names":["React","Component","Colors","Button","TextArea","Radio","Cells","CellsTitle","Cell","CellHeader","CellBody","CellFooter","Form","FormCell","Label","Input","RegistrationFields","props","tmpConfig","JSON","parse","state","config","tmpFormValues","inputFields","field","push","title","setState","formValues","length","undefined","initFormTemplate","event","formValue","target","name","value","formArray","callbackUpdateForm","item","isParticipated","extractFieldsFromConfig","nextProps","nextContext","errMsg","placeholder","styles","formWrapper","map","index","type","handleChange","backgroundColor","formBackground","inputField","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Colors from \"../../../constants/Colors\"\nimport { Button, TextArea, Radio, Cells, CellsTitle, Cell, CellHeader, CellBody, CellFooter, Form, FormCell, Label } from 'react-weui'\nimport Input from '../../../components/Common/form/Input'\n\nclass RegistrationFields extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            callbackUpdateForm: this.props.callbackUpdateForm,\n            config: this.props.item.config,\n            isParticipated: this.props.isParticipated,\n            formValues: {},\n            formArray: []\n        }\n    }\n\n    componentDidMount() {\n        this.extractFieldsFromConfig()\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            isParticipated: nextProps.isParticipated\n        })\n    }\n\n    initFormTemplate = () => {\n        let tmpConfig = JSON.parse(this.state.config)\n        let tmpFormValues = []\n        for (let field of tmpConfig.inputFields) {\n            tmpFormValues.push({\n                'title': field.title,\n                'value': ''\n            })\n        }\n        this.setState({\n            formValues: tmpFormValues\n        })\n    }\n\n    extractFieldsFromConfig = () => {\n        let tmpConfig = JSON.parse(this.state.config)\n        this.setState({\n            inputFields: tmpConfig.inputFields && tmpConfig.inputFields.length > 0 ? tmpConfig.inputFields : undefined\n        }, ()=> {\n            this.initFormTemplate()\n        })\n    }\n\n    handleChange = event => {\n        let { formValues } = this.state\n        for (let formValue of formValues) {\n            if (formValue.title === event.target.name) {\n                formValue.value = event.target.value\n            }\n        }\n        this.setState({\n            formArray: formValues\n        }, ()=>{\n            this.state.callbackUpdateForm(this.state.formArray)\n        })\n    }\n\n    render(){\n        const { inputFields, isParticipated } = this.state\n        const errMsg = 'error!'\n        const placeholder = '请输入'\n        if (inputFields && !isParticipated) {\n            return (\n                <div style={styles.formWrapper}>\n                    {inputFields.map((field, index) => {\n                        let { type, title } = field\n                        return ( <Input key={index}\n                                        name={title}\n                                        required={true}\n                                        errorMessage={errMsg}\n                                        placeholder={placeholder + title}\n                                        fieldType={type}\n                                        value=''\n                                        onTextChange={this.handleChange}\n                        /> )\n                    })}\n                </div>\n            )\n        }\n        else return null\n    }\n}\n\nconst styles = {\n    formWrapper: {\n        backgroundColor: Colors.formBackground\n    },\n    inputField: {\n        fontSize: '14px'\n    }\n}\n\nexport default RegistrationFields\n\n"]},"metadata":{},"sourceType":"module"}