{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Colors from '../../../constants/Colors';\nimport { validateEmail, validateNum, validateDefaultInput } from '../../Helpers/FormValidation/InputValidation';\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      _this.handleChange({\n        target: {\n          value: _this.state.value,\n          name: _this.state.name\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        value: event.target.value\n      }, function () {\n        switch (_this.state.type) {\n          case 'email':\n            _this.setState({\n              isValid: validateEmail(_this.state.value)\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n\n          case 'number':\n            _this.setState({\n              isValid: validateNum(_this.state.value, _this.state.numberLength)\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n\n          default:\n            _this.setState({\n              isValid: _this.state.required ? validateDefaultInput(_this.state.value) : true\n            }, function () {\n              _this.state.onTextChange(_this.getEvent());\n            });\n\n            break;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getEvent\", function () {\n      var tmpEvent = {};\n      tmpEvent.target = {\n        isValid: _this.state.isValid,\n        name: _this.state.name,\n        value: _this.state.value\n      };\n      return tmpEvent;\n    });\n\n    _this.state = {\n      value: _this.props.value ? _this.props.value : '',\n      isValid: !!_this.props.value,\n      fieldType: _this.props.fieldType,\n      required: _this.props.required ? _this.props.required : false,\n      errorMessage: _this.props.errorMessage,\n      disabled: _this.props.disabled,\n      placeholder: _this.props.placeholder ? _this.props.placeholder : null,\n      onTextChange: _this.props.onTextChange,\n      name: _this.props.name,\n      numberLength: _this.props.numberLength\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        disabled: nextProps.disabled,\n        value: nextProps.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.onTextChange(this.getEvent());\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.value && !this.state.value) {\n        this.handleChange({\n          target: {\n            value: nextState.value,\n            name: this.state.name\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          isValid = _this$state.isValid,\n          fieldType = _this$state.fieldType,\n          required = _this$state.required,\n          errorMessage = _this$state.errorMessage,\n          disabled = _this$state.disabled,\n          placeholder = _this$state.placeholder,\n          name = _this$state.name; // const err = isValid ? null : <p style={styles.error}>{errorMessage}</p>\n\n      return React.createElement(\"div\", {\n        style: styles.inputWrapper\n      }, React.createElement(\"p\", {\n        style: styles.label\n      }, name), React.createElement(\"div\", {\n        style: styles.inputContainer\n      }, fieldType === 'input' ? React.createElement(\"input\", {\n        onBlur: this.onBlur,\n        value: value,\n        required: required,\n        placeholder: placeholder,\n        disabled: disabled,\n        style: disabled ? styles.disabledInputField : styles.inputField,\n        onChange: this.handleChange,\n        name: name\n      }) : React.createElement(\"textarea\", {\n        onBlur: this.onBlur,\n        value: value,\n        required: required,\n        placeholder: placeholder,\n        disabled: disabled,\n        style: styles.inputField,\n        onChange: this.handleChange,\n        name: name,\n        rows: \"5\"\n      })));\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nvar styles = {\n  inputWrapper: {\n    fontSize: '13px'\n  },\n  inputContainer: {\n    backgroundColor: \"#FFF\",\n    padding: '8px'\n  },\n  disabledInputField: {\n    width: '100%',\n    backgroundColor: '#FFF',\n    padding: '0',\n    border: '0',\n    margin: '0',\n    outline: 'none',\n    fontSize: '13px'\n  },\n  inputField: {\n    width: '100%',\n    backgroundColor: '#FFF',\n    padding: '0',\n    border: '0',\n    margin: '0',\n    outline: 'none',\n    fontSize: '13px'\n  },\n  label: {\n    color: '#999999',\n    padding: '8px'\n  },\n  error: {\n    color: 'red',\n    padding: '2vw'\n  }\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}