{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport md5 from 'md5';\n\nvar UtilsService =\n/*#__PURE__*/\nfunction () {\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"formatRawCompany\",\n    value: function formatRawCompany(company) {\n      if (company.config) {\n        company.config = JSON.parse(company.config);\n      } else {\n        company.config = {};\n      }\n\n      if (company.admin_config) {\n        company.admin_config = JSON.parse(company.admin_config);\n      } else {\n        company.admin_config = {};\n      }\n\n      return company;\n    }\n  }, {\n    key: \"getWebAddress\",\n    value: function getWebAddress() {\n      return window.location.hostname + '/';\n    }\n  }, {\n    key: \"getItemImgUrlWithSize\",\n    value: function getItemImgUrlWithSize() {\n      var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MEDIUM';\n      var defaultUrl = '../static/assets/default_item.png';\n\n      if (item) {\n        switch (size) {\n          case 'SMALL':\n            var smallImgs = item.images_in_diff_sizes && item.images_in_diff_sizes.smallImages ? _Object$values(item.images_in_diff_sizes.smallImages) : undefined;\n            if (smallImgs && smallImgs[0]) return smallImgs[0].url;else return defaultUrl;\n\n          case 'MEDIUM':\n            var mediumImages = item.images_in_diff_sizes && item.images_in_diff_sizes.midImages ? _Object$values(item.images_in_diff_sizes.midImages) : undefined;\n            if (mediumImages && mediumImages[0]) return mediumImages[0].url;else return defaultUrl;\n\n          case 'LARGE':\n            var largeImages = item.images_in_diff_sizes && item.images_in_diff_sizes.origImages ? _Object$values(item.images_in_diff_sizes.origImages) : undefined;\n            if (largeImages && largeImages[0]) return largeImages[0].url;else return defaultUrl;\n\n          default:\n            return '../static/assets/default_item.png';\n        }\n      } else return defaultUrl;\n    }\n  }, {\n    key: \"getIsCompanyAdmin\",\n    value: function getIsCompanyAdmin(user, targetCompanyId) {\n      if (user && user.adminOfCompanyIds && user.adminOfCompanyIds.length > 0 && targetCompanyId) {\n        if (user.is_admin) {\n          return true;\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(user.adminOfCompanyIds), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var adminOfCompanyId = _step.value;\n\n            if (adminOfCompanyId === targetCompanyId) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"stripHtmlTags\",\n    value: function stripHtmlTags(text) {\n      var styleRegex = /((<style>)|(<style type=.+))((\\s+)|(\\S+)|(\\r+)|(\\n+))(.+)((\\s+)|(\\S+)|(\\r+)|(\\n+))(<\\/style>)/g;\n      return text ? String(text).replace(styleRegex, '').replace(/&nbsp;/gi, '').replace(/<[^>]+>/gm, '') : '';\n    }\n  }, {\n    key: \"openedInWeChat\",\n    value: function openedInWeChat() {\n      var tmp = {};\n      tmp.userAgent = window.navigator.userAgent.toLowerCase();\n\n      if (tmp.userAgent.match(/MicroMessenger/i)) {\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return UtilsService;\n}();\n\nvar utilsService = new UtilsService();\nexport default utilsService;","map":null,"metadata":{},"sourceType":"module"}