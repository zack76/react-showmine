{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport fetch from 'isomorphic-unfetch';\nimport { StoreGlobal } from '../Global';\n\nvar BaseService =\n/*#__PURE__*/\nfunction () {\n  function BaseService() {\n    _classCallCheck(this, BaseService);\n  }\n\n  _createClass(BaseService, [{\n    key: \"get\",\n    value: function get(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (params) {\n        url += (url.indexOf('?') === -1 ? '?' : '&') + this.queryParams(params);\n      }\n\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      });\n    }\n  }, {\n    key: \"get2\",\n    value: function get2(url) {\n      // const userToken = localStorage.getItem('userToken');\n      // const userToken = 'a95f6b7e569038cb2dfac8302d6d378e';\n      var userToken = '7a2adfd167529ebc0e564d142cb34b79';\n      var authString = localStorage.getItem('authString');\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'X-Auth-Token ' + userToken,\n          'Wechat-Browser-Acc': authString\n        }\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var userToken = localStorage.getItem('userToken');\n      var authString = localStorage.getItem('authString');\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'X-Auth-Token ' + userToken,\n          'Wechat-Browser-Acc': authString\n        },\n        body: _JSON$stringify(params)\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var userToken = localStorage.getItem('userToken');\n      var authString = localStorage.getItem('authString');\n      return fetch(url, {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'X-Auth-Token ' + userToken,\n          'Wechat-Browser-Acc': authString\n        },\n        body: _JSON$stringify(params)\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var userToken = localStorage.getItem('userToken');\n      var authString = localStorage.getItem('authString');\n      return fetch(url, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'X-Auth-Token ' + userToken,\n          'Wechat-Browser-Acc': authString\n        },\n        body: _JSON$stringify(params)\n      });\n    }\n  }, {\n    key: \"queryParams\",\n    value: function queryParams(params) {\n      return _Object$keys(params).map(function (k) {\n        return encodeURIComponent(k) + '=' + encodeURIComponent(params[k]);\n      }).join('&');\n    }\n  }]);\n\n  return BaseService;\n}();\n\nvar baseService = new BaseService();\nexport default baseService;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM_React/shm-react/my-app/service/BaseService.js"],"names":["fetch","StoreGlobal","BaseService","url","params","indexOf","queryParams","method","headers","Accept","userToken","authString","localStorage","getItem","body","map","k","encodeURIComponent","join","baseService"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { StoreGlobal } from '../Global';\n\n\nclass BaseService {\n    get(url, params = null) {\n        if (params) {\n            url += (url.indexOf('?') === -1 ? '?' : '&') + this.queryParams(params);\n        }\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json;charset=UTF-8',\n            }\n        });\n    }\n\n    get2(url) {\n        // const userToken = localStorage.getItem('userToken');\n        // const userToken = 'a95f6b7e569038cb2dfac8302d6d378e';\n        const userToken = '7a2adfd167529ebc0e564d142cb34b79';\n\n        const authString = localStorage.getItem('authString');\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Authorization' : 'X-Auth-Token ' + userToken,\n                'Wechat-Browser-Acc': authString,\n            },\n        });\n    }\n\n    post(url, params = null) {\n        const userToken = localStorage.getItem('userToken');\n        const authString = localStorage.getItem('authString');\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Authorization' : 'X-Auth-Token ' + userToken,\n                'Wechat-Browser-Acc': authString,\n            },\n            body: JSON.stringify(params),\n        });\n    }\n\n    put(url, params = null) {\n        const userToken = localStorage.getItem('userToken');\n        const authString = localStorage.getItem('authString');\n        return fetch(url, {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Authorization' : 'X-Auth-Token ' + userToken,\n                'Wechat-Browser-Acc': authString,\n            },\n            body: JSON.stringify(params),\n        });\n    }\n\n    delete(url, params = null) {\n        const userToken = localStorage.getItem('userToken');\n        const authString = localStorage.getItem('authString');\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Authorization' : 'X-Auth-Token ' + userToken,\n                'Wechat-Browser-Acc': authString,\n            },\n            body: JSON.stringify(params),\n        });\n    }\n    queryParams(params) {\n        return Object.keys(params)\n            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n            .join('&');\n    }\n\n}\n\nconst baseService = new BaseService();\nexport default baseService;\n"]},"metadata":{},"sourceType":"module"}