{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport md5 from 'md5';\n\nvar UtilsService =\n/*#__PURE__*/\nfunction () {\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"formatRawCompany\",\n    value: function formatRawCompany(company) {\n      if (company.config) {\n        company.config = JSON.parse(company.config);\n      } else {\n        company.config = {};\n      }\n\n      if (company.admin_config) {\n        company.admin_config = JSON.parse(company.admin_config);\n      } else {\n        company.admin_config = {};\n      }\n\n      return company;\n    }\n  }, {\n    key: \"getWebAddress\",\n    value: function getWebAddress() {\n      return window.location.hostname + '/';\n    }\n  }, {\n    key: \"getItemImgUrlWithSize\",\n    value: function getItemImgUrlWithSize() {\n      var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MEDIUM';\n      var defaultUrl = '../static/assets/default_item.png';\n\n      if (item) {\n        switch (size) {\n          case 'SMALL':\n            var smallImgs = item.images_in_diff_sizes && item.images_in_diff_sizes.smallImages ? _Object$values(item.images_in_diff_sizes.smallImages) : undefined;\n            if (smallImgs && smallImgs[0]) return smallImgs[0].url;else return defaultUrl;\n\n          case 'MEDIUM':\n            var mediumImages = item.images_in_diff_sizes && item.images_in_diff_sizes.midImages ? _Object$values(item.images_in_diff_sizes.midImages) : undefined;\n            if (mediumImages && mediumImages[0]) return mediumImages[0].url;else return defaultUrl;\n\n          case 'LARGE':\n            var largeImages = item.images_in_diff_sizes && item.images_in_diff_sizes.origImages ? _Object$values(item.images_in_diff_sizes.origImages) : undefined;\n            if (largeImages && largeImages[0]) return largeImages[0].url;else return defaultUrl;\n\n          default:\n            return '../static/assets/default_item.png';\n        }\n      } else return defaultUrl;\n    }\n  }, {\n    key: \"getIsCompanyAdmin\",\n    value: function getIsCompanyAdmin(user, targetCompanyId) {\n      if (user.adminOfCompanyIds && user.adminOfCompanyIds.length > 0 && targetCompanyId) {\n        if (user.is_admin) {\n          return true;\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(user.adminOfCompanyIds), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var adminOfCompanyId = _step.value;\n\n            if (adminOfCompanyId === targetCompanyId) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return UtilsService;\n}();\n\nvar utilsService = new UtilsService();\nexport default utilsService;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM_React/shm-react/my-app/service/UtilsService.js"],"names":["md5","UtilsService","company","config","JSON","parse","admin_config","window","location","hostname","item","undefined","size","defaultUrl","smallImgs","images_in_diff_sizes","smallImages","url","mediumImages","midImages","largeImages","origImages","user","targetCompanyId","adminOfCompanyIds","length","is_admin","adminOfCompanyId","utilsService"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;;IACMC,Y;;;;;;;;;qCACgBC,O,EAAS;AACvB,UAAIA,OAAO,CAACC,MAAZ,EAAoB;AAChBD,QAAAA,OAAO,CAACC,MAAR,GAAiBC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,MAAnB,CAAjB;AAEH,OAHD,MAGO;AACHD,QAAAA,OAAO,CAACC,MAAR,GAAiB,EAAjB;AACH;;AACD,UAAID,OAAO,CAACI,YAAZ,EAA0B;AACtBJ,QAAAA,OAAO,CAACI,YAAR,GAAuBF,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,YAAnB,CAAvB;AACH,OAFD,MAEO;AACHJ,QAAAA,OAAO,CAACI,YAAR,GAAuB,EAAvB;AACH;;AACD,aAAOJ,OAAP;AACH;;;oCACc;AACX,aAAOK,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,GAAlC;AACH;;;4CAEyD;AAAA,UAAnCC,IAAmC,uEAA5BC,SAA4B;AAAA,UAAjBC,IAAiB,uEAAV,QAAU;AACtD,UAAIC,UAAU,GAAG,mCAAjB;;AACA,UAAIH,IAAJ,EAAU;AACN,gBAAQE,IAAR;AACI,eAAK,OAAL;AACI,gBAAIE,SAAS,GAAGJ,IAAI,CAACK,oBAAL,IAA6BL,IAAI,CAACK,oBAAL,CAA0BC,WAAvD,GACZ,eAAcN,IAAI,CAACK,oBAAL,CAA0BC,WAAxC,CADY,GAC2CL,SAD3D;AAEA,gBAAIG,SAAS,IAAIA,SAAS,CAAC,CAAD,CAA1B,EACI,OAAOA,SAAS,CAAC,CAAD,CAAT,CAAaG,GAApB,CADJ,KAEK,OAAOJ,UAAP;;AACT,eAAK,QAAL;AACI,gBAAIK,YAAY,GAAGR,IAAI,CAACK,oBAAL,IAA6BL,IAAI,CAACK,oBAAL,CAA0BI,SAAvD,GACf,eAAcT,IAAI,CAACK,oBAAL,CAA0BI,SAAxC,CADe,GACsCR,SADzD;AAEA,gBAAIO,YAAY,IAAIA,YAAY,CAAC,CAAD,CAAhC,EACI,OAAOA,YAAY,CAAC,CAAD,CAAZ,CAAgBD,GAAvB,CADJ,KAEK,OAAOJ,UAAP;;AACT,eAAK,OAAL;AACI,gBAAIO,WAAW,GAAGV,IAAI,CAACK,oBAAL,IAA6BL,IAAI,CAACK,oBAAL,CAA0BM,UAAvD,GACd,eAAcX,IAAI,CAACK,oBAAL,CAA0BM,UAAxC,CADc,GACwCV,SAD1D;AAEA,gBAAIS,WAAW,IAAIA,WAAW,CAAC,CAAD,CAA9B,EACI,OAAOA,WAAW,CAAC,CAAD,CAAX,CAAeH,GAAtB,CADJ,KAEK,OAAOJ,UAAP;;AACT;AACI,mBAAO,mCAAP;AApBR;AAsBH,OAvBD,MAwBK,OAAOA,UAAP;AACR;;;sCAEkBS,I,EAAMC,e,EAAiB;AACtC,UAAID,IAAI,CAACE,iBAAL,IAA0BF,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,GAAgC,CAA1D,IAA+DF,eAAnE,EAAoF;AAChF,YAAID,IAAI,CAACI,QAAT,EAAmB;AACf,iBAAO,IAAP;AACH;;AAH+E;AAAA;AAAA;;AAAA;AAIhF,4CAA6BJ,IAAI,CAACE,iBAAlC,4GAAqD;AAAA,gBAA5CG,gBAA4C;;AACjD,gBAAIA,gBAAgB,KAAKJ,eAAzB,EAA0C;AACtC,qBAAO,IAAP;AACH;AACJ;AAR+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASnF;;AACD,aAAO,KAAP;AACH;;;;;;AAOL,IAAMK,YAAY,GAAG,IAAI3B,YAAJ,EAArB;AACA,eAAe2B,YAAf","sourcesContent":["import md5 from 'md5';\nclass UtilsService {\n    formatRawCompany (company) {\n        if (company.config) {\n            company.config = JSON.parse(company.config);\n\n        } else {\n            company.config = {};\n        }\n        if (company.admin_config) {\n            company.admin_config = JSON.parse(company.admin_config)\n        } else {\n            company.admin_config = {};\n        }\n        return company;\n    }\n    getWebAddress(){\n        return window.location.hostname + '/';\n    }\n\n    getItemImgUrlWithSize (item = undefined, size = 'MEDIUM') {\n        let defaultUrl = '../static/assets/default_item.png';\n        if (item) {\n            switch (size) {\n                case 'SMALL':\n                    let smallImgs = item.images_in_diff_sizes && item.images_in_diff_sizes.smallImages ?\n                        Object.values(item.images_in_diff_sizes.smallImages) : undefined;\n                    if (smallImgs && smallImgs[0])\n                        return smallImgs[0].url;\n                    else return defaultUrl;\n                case 'MEDIUM':\n                    let mediumImages = item.images_in_diff_sizes && item.images_in_diff_sizes.midImages ?\n                        Object.values(item.images_in_diff_sizes.midImages) : undefined;\n                    if (mediumImages && mediumImages[0])\n                        return mediumImages[0].url;\n                    else return defaultUrl;\n                case 'LARGE':\n                    let largeImages = item.images_in_diff_sizes && item.images_in_diff_sizes.origImages ?\n                        Object.values(item.images_in_diff_sizes.origImages) : undefined;\n                    if (largeImages && largeImages[0])\n                        return largeImages[0].url;\n                    else return defaultUrl;\n                default:\n                    return '../static/assets/default_item.png';\n            }\n        }\n        else return defaultUrl;\n    }\n\n    getIsCompanyAdmin (user, targetCompanyId) {\n        if (user.adminOfCompanyIds && user.adminOfCompanyIds.length > 0 && targetCompanyId) {\n            if (user.is_admin) {\n                return true;\n            }\n            for (let adminOfCompanyId of user.adminOfCompanyIds) {\n                if (adminOfCompanyId === targetCompanyId) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n\n\n\n}\n\nconst utilsService = new UtilsService();\nexport default utilsService;\n"]},"metadata":{},"sourceType":"module"}