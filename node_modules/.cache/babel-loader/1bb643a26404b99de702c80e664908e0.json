{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'weui';\nimport 'react-weui/build/packages/react-weui.css';\nimport Colors from \"../constants/Colors\";\nimport Lang from '../lang/Lang'; //import component\n\nimport SiteHeader from '../components/Common/SiteHeader';\nimport CartClearSection from \"../components/Cart/CartClearSection\";\nimport Footer from \"../components/Common/SiteFooter\";\nimport CartService from \"../service/CartService\";\nimport CartListItem from \"../components/Cart/CartListItem\";\nimport CheckoutView from \"../components/Cart/CheckoutView\";\nimport CheckoutButton from \"../components/Cart/CheckoutButton\";\n\nvar cartPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(cartPage, _Component);\n\n  function cartPage(props) {\n    var _this;\n\n    _classCallCheck(this, cartPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(cartPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"clearUserCart\", function () {\n      CartService.clearCartItems(_this.state.companyId).then(function (response) {\n        _this.setState({\n          cartItems: [],\n          totalCost: 0\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editSelectedCartItems\", function (itemId, qty, isSelected) {\n      var selectedList = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(_this.state.cartItems), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var cartItem = _step.value;\n\n          if (cartItem.id === itemId) {\n            cartItem.qty = qty;\n            isSelected ? selectedList.push(cartItem) : null;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        selectedItemList: selectedList\n      }, function () {\n        _this.CalculateTotalCost(selectedList);\n\n        _this.updateUserCart(itemId, qty);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"CalculateTotalCost\", function (selectedList) {\n      var initCost = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(selectedList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var selectedItem = _step2.value;\n          initCost += _parseInt(selectedItem.qty) * 8; // initCost + parseInt(selectedItem.qty) * parseInt(selectedItem.item.price)\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      _this.setState({\n        totalCost: initCost\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateUserCart\", function (itemId, qty) {\n      var params = {\n        item_id: itemId,\n        qty: qty\n      };\n      CartService.updateCartItems(_this.state.companyId, params).then(function (response) {}).catch(function (error) {\n        console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showHideCheckoutView\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isCheckingOut: !prevState.isCheckingOut\n        };\n      });\n    });\n\n    _this.state = {\n      companyId: '8e26b6edb2ce7416f71a82ed78e08984',\n      cartItems: [],\n      selectedItemList: [],\n      totalCost: 0,\n      isCheckingOut: false\n    };\n    return _this;\n  }\n\n  _createClass(cartPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCartItems();\n    }\n  }, {\n    key: \"formatCartItems\",\n    value: function formatCartItems(rawItems) {\n      var formattedItems = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getIterator(rawItems), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var rawItem = _step3.value;\n          var tmpItem = rawItem.item;\n          tmpItem.qty = rawItem.qty;\n          tmpItem.isSelected = true;\n          formattedItems.push(tmpItem);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return formattedItems;\n    }\n  }, {\n    key: \"getCartItems\",\n    value: function getCartItems() {\n      var _this2 = this;\n\n      var companyId = this.state.companyId;\n      CartService.getCartItems(companyId).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var tmpCartItems = responseJson && responseJson[0] && responseJson[0].cartitems.length > 0 ? responseJson[0].cartitems : [];\n\n        var cartItems = _this2.formatCartItems(tmpCartItems);\n\n        _this2.setState({\n          cartItems: cartItems,\n          selectedItemList: cartItems\n        }, function () {\n          _this2.CalculateTotalCost(cartItems);\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var editSelectedCartItems = this.editSelectedCartItems;\n      return React.createElement(\"div\", {\n        className: \"App\"\n      }, React.createElement(SiteHeader, null), !this.state.isCheckingOut ? React.createElement(\"div\", null, React.createElement(\"div\", {\n        style: styles.pageTitle\n      }, Lang.translate('CART')), React.createElement(CartClearSection, {\n        callbackClearCart: this.clearUserCart\n      }), this.state.cartItems.map(function (item, index) {\n        return React.createElement(CartListItem, {\n          item: item,\n          key: index,\n          callbackUpdate: editSelectedCartItems\n        });\n      }), React.createElement(CheckoutButton, {\n        totalCost: this.state.totalCost,\n        callbackChangeView: this.showHideCheckoutView\n      })) : React.createElement(CheckoutView, {\n        itemList: this.state.selectedItemList\n      }), React.createElement(Footer, null));\n    }\n  }]);\n\n  return cartPage;\n}(Component);\n\nvar styles = {\n  pageTitle: {\n    fontSize: '22px',\n    color: Colors.fontColor,\n    textAlign: 'center',\n    padding: '10px'\n  }\n};\nexport default cartPage;","map":null,"metadata":{},"sourceType":"module"}