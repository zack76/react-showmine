{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar UtilsService =\n/*#__PURE__*/\nfunction () {\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"formatRawCompany\",\n    value: function formatRawCompany(company) {\n      if (company.config) {\n        company.config = JSON.parse(company.config);\n      } else {\n        company.config = {};\n      }\n\n      if (company.admin_config) {\n        company.admin_config = JSON.parse(company.admin_config);\n      } else {\n        company.admin_config = {};\n      }\n\n      return company;\n    }\n  }, {\n    key: \"getWebAddress\",\n    value: function getWebAddress() {\n      return window.location.hostname + '/';\n    }\n  }]);\n\n  return UtilsService;\n}();\n\nvar utilsService = new UtilsService();\nexport default utilsService;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM_React/shm-react/my-app/service/UtilsService.js"],"names":["UtilsService","company","config","JSON","parse","admin_config","window","location","hostname","utilsService"],"mappings":";;;IAAMA,Y;;;;;;;;;qCACgBC,O,EAAS;AACvB,UAAIA,OAAO,CAACC,MAAZ,EAAoB;AAChBD,QAAAA,OAAO,CAACC,MAAR,GAAiBC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,MAAnB,CAAjB;AAEH,OAHD,MAGO;AACHD,QAAAA,OAAO,CAACC,MAAR,GAAiB,EAAjB;AACH;;AACD,UAAID,OAAO,CAACI,YAAZ,EAA0B;AACtBJ,QAAAA,OAAO,CAACI,YAAR,GAAuBF,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,YAAnB,CAAvB;AACH,OAFD,MAEO;AACHJ,QAAAA,OAAO,CAACI,YAAR,GAAuB,EAAvB;AACH;;AACD,aAAOJ,OAAP;AACH;;;oCACc;AACX,aAAOK,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,GAAlC;AACH;;;;;;AAKL,IAAMC,YAAY,GAAG,IAAIT,YAAJ,EAArB;AACA,eAAeS,YAAf","sourcesContent":["class UtilsService {\n    formatRawCompany (company) {\n        if (company.config) {\n            company.config = JSON.parse(company.config);\n\n        } else {\n            company.config = {};\n        }\n        if (company.admin_config) {\n            company.admin_config = JSON.parse(company.admin_config)\n        } else {\n            company.admin_config = {};\n        }\n        return company;\n    }\n    getWebAddress(){\n        return window.location.hostname + '/';\n    }\n\n\n}\n\nconst utilsService = new UtilsService();\nexport default utilsService;\n"]},"metadata":{},"sourceType":"module"}