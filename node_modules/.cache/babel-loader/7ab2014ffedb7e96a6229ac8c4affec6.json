{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Colors from \"../../../constants/Colors\";\nimport Input from '../../../components/Common/form/Input';\n\nvar RegistrationFields =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegistrationFields, _Component);\n\n  function RegistrationFields(props) {\n    var _this;\n\n    _classCallCheck(this, RegistrationFields);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrationFields).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"extractFieldsFromConfig\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n\n      _this.setState({\n        inputFields: tmpConfig.inputFields && tmpConfig.inputFields.length > 0 ? tmpConfig.inputFields : undefined\n      }, function () {\n        _this.initFormTemplate();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initFormTemplate\", function () {\n      var tmpConfig = JSON.parse(_this.state.config);\n      var tmpFormValues = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(tmpConfig.inputFields), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var field = _step.value;\n          tmpFormValues.push({\n            'title': field.title,\n            'value': '',\n            'isValid': false,\n            'type': field.type\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: tmpFormValues\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"extractValuesFromConfig\", function (tmpFormValues, tmpRegistrationObj) {\n      var valueArray = JSON.parse(tmpRegistrationObj.config);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(tmpFormValues), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var formValue = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _getIterator(valueArray), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var value = _step3.value;\n\n              if (formValue.title === value.title) {\n                formValue.value = value.value;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: tmpFormValues\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var formValues = _this.state.formValues;\n      var _isValidForm = true;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = _getIterator(formValues), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var formValue = _step4.value;\n\n          if (formValue.title === event.target.name) {\n            formValue.value = event.target.value;\n            formValue.isValid = event.target.isValid;\n          }\n\n          if (!formValue.isValid) {\n            _isValidForm = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      _this.setState({\n        formValues: formValues,\n        isValidForm: _isValidForm\n      }, function () {\n        _this.state.callbackUpdateForm(_this.state.formValues, _this.state.isValidForm);\n      });\n    });\n\n    _this.state = {\n      callbackUpdateForm: _this.props.callbackUpdateForm,\n      config: _this.props.item.config,\n      isParticipated: _this.props.isParticipated,\n      formValues: undefined,\n      inputFields: [],\n      isValidForm: false,\n      isEditing: _this.props.isEditing,\n      registrationObj: _this.props.registrationObj\n    };\n    return _this;\n  }\n\n  _createClass(RegistrationFields, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        isParticipated: nextProps.isParticipated,\n        isEditing: nextProps.isEditing,\n        registrationObj: nextProps.registrationObj\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.extractFieldsFromConfig();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.registrationObj && !this.state.registrationObj) {\n        this.extractValuesFromConfig(this.state.formValues, nextState.registrationObj);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formValues = _this$state.formValues,\n          isEditing = _this$state.isEditing,\n          isParticipated = _this$state.isParticipated;\n      var errMsg = 'error!';\n      var placeholder = '请输入';\n      var disableForm = !isEditing && isParticipated;\n\n      if (formValues) {\n        return React.createElement(\"div\", {\n          style: styles.formWrapper\n        }, formValues.map(function (field, index) {\n          var type = field.type,\n              title = field.title,\n              value = field.value;\n          return React.createElement(Input, {\n            key: index,\n            name: title,\n            required: true,\n            errorMessage: errMsg,\n            placeholder: placeholder + title,\n            fieldType: type,\n            value: value,\n            disabled: disableForm,\n            onTextChange: _this2.handleChange\n          });\n        }), React.createElement(\"div\", {\n          style: Colors.style.bottomDivider\n        }));\n      } else return null;\n    }\n  }]);\n\n  return RegistrationFields;\n}(Component);\n\nvar styles = {\n  formWrapper: {\n    backgroundColor: Colors.formBackground\n  },\n  inputField: {\n    fontSize: '14px'\n  }\n};\nexport default RegistrationFields;","map":null,"metadata":{},"sourceType":"module"}