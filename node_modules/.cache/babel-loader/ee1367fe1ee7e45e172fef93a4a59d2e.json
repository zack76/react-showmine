{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/SubscribeBtn.js\";\nimport { Button, Toast } from \"react-weui\";\nimport Lang from \"../../lang/Lang\";\nimport React from \"react\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { Config } from \"../../Config\";\nimport AuthService from \"../../service/AuthService\";\nimport Modal from 'react-modal';\nimport CompanyService from \"../../service/CompanyService\";\nimport UtilsService from \"../../service/UtilsService\";\n\nvar SubscribeBtn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscribeBtn, _React$Component);\n\n  function SubscribeBtn(props) {\n    var _this;\n\n    _classCallCheck(this, SubscribeBtn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubscribeBtn).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoginStatus\", function () {\n      if (_this.state.subscribeLoginLogId) {\n        AuthService.checkLoginStatus(_this.state.subscribeLoginLogId || null).then(function (response) {\n          return response.text();\n        }).then(function (resp) {\n          var res = JSON.parse(resp);\n\n          if (res.log && res.log.tmp_token && res.log.tmp_token.trim() !== '') {\n            _this.setState({\n              loading: true\n            });\n\n            _this.loginWithTempCode(res.log.tmp_token.trim());\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginWithTempCode\", function (tmpToken) {\n      AuthService.loginWithTempCode(tmpToken).then(function (response) {\n        return response.text();\n      }).then(function (resp) {\n        var res = JSON.parse(resp);\n\n        if (res.return_code) {\n          localStorage.setItem('userToken', res.return_code);\n          localStorage.setItem('isLogIn', true);\n        }\n\n        var params = {};\n        AuthService.getMe(params).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          localStorage.setItem('userObject', _JSON$stringify(responseJson));\n        }).then(function () {\n          location.reload();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"subscribe\", function (company, item) {\n      var user = JSON.parse(localStorage.getItem('userObject')); // user = {\n      //     wechat_is_subscriber: true\n      // }\n\n      if (!user) {\n        if (UtilsService.openedInWeChat()) {\n          _this.weChatLogin();\n        } else {\n          var getLoginStatus = _this.getLoginStatus;\n          var params = {\n            companyId: company.id,\n            itemId: item && item.id\n          };\n          AuthService.getLoginSubscribeQrCode(params).then(function (response) {\n            return response.text();\n          }).then(function (resp) {\n            var res = JSON.parse(resp);\n            var interval = setInterval(getLoginStatus, 1000);\n\n            _this.setState({\n              qrUrl: res.qrcode,\n              subscribeLoginLogId: res.subscribeLoginLogId,\n              showModal: true,\n              interval: interval\n            });\n          });\n        }\n      } else {\n        if (!user.wechat_is_subscriber) {\n          _this.setState({\n            loading: true\n          }, function () {\n            CompanyService.subscribeCompany(company.id).then(function (res) {\n              _this.setState({\n                loading: false,\n                success: true\n              });\n\n              _this.state.toastTimer = setTimeout(function () {\n                _this.setState({\n                  success: false\n                });\n              }, 2000);\n            });\n          });\n        } else {\n          _this.getQrCode(item, company); // this.setState({\n          //     showModal: true\n          // })\n\n        }\n      }\n    });\n\n    _this.state = {\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(SubscribeBtn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {// this.getQrCode(this.props.item, this.props.company)\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.state.interval);\n    }\n  }, {\n    key: \"weChatLogin\",\n    value: function weChatLogin() {\n      var origUrl = window.location.href;\n      var authUrl = Config.webAddress + 'AuthPage';\n      AuthService.wechatLogin(origUrl, authUrl, {}).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        window.open(responseJson.auth_url, \"_self\");\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"getQrCode\",\n    value: function getQrCode(item, company) {\n      var _this2 = this;\n\n      var params = {};\n\n      if (item && item.id) {\n        params = {\n          itemId: item.id\n        };\n      }\n\n      var companyId = company.id;\n      CompanyService.getCompanyQrCode(companyId, params).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        _this2.setState({\n          qrUrl: response,\n          showModal: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var customStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      }; // const company = this.props.company;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        style: styles.subsButton,\n        onClick: function onClick() {\n          _this3.subscribe(_this3.props.company, _this3.props.item);\n        },\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(IoIosStar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), Lang.translate('SUBSCRIBE')), React.createElement(Modal, {\n        isOpen: this.state.showModal // onAfterOpen={() => {this.getQrCode(item)}}\n        ,\n        onRequestClose: function onRequestClose() {\n          _this3.setState({\n            showModal: false\n          });\n        },\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.qrTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"\\u626B\\u7801\\u5173\\u6CE8\\u8BE5\\u516C\\u53F8\"), React.createElement(\"div\", {\n        style: styles.qrTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"\\u5C06\\u66F4\\u53CA\\u65F6\\u7684\\u6536\\u5230\\u63A8\\u9001\")), React.createElement(\"img\", {\n        style: styles.qrcode,\n        src: this.state.qrUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(Toast, {\n        icon: \"success-no-circle\",\n        show: this.state.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Success\"), React.createElement(Toast, {\n        icon: \"loading\",\n        show: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }]);\n\n  return SubscribeBtn;\n}(React.Component);\n\nvar styles = {\n  subsButton: {\n    borderColor: 'red',\n    color: 'red' // padding: '2vw',\n\n  },\n  qrcode: {\n    width: '100%'\n  },\n  qrTitle: {\n    width: '100%',\n    textAlign: 'center'\n  }\n};\nexport default SubscribeBtn;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/SubscribeBtn.js"],"names":["Button","Toast","Lang","React","IoIosStar","Config","AuthService","Modal","CompanyService","UtilsService","SubscribeBtn","props","state","subscribeLoginLogId","checkLoginStatus","then","response","text","resp","res","JSON","parse","log","tmp_token","trim","setState","loading","loginWithTempCode","tmpToken","return_code","localStorage","setItem","params","getMe","json","responseJson","location","reload","catch","error","console","company","item","user","getItem","openedInWeChat","weChatLogin","getLoginStatus","companyId","id","itemId","getLoginSubscribeQrCode","interval","setInterval","qrUrl","qrcode","showModal","wechat_is_subscriber","subscribeCompany","success","toastTimer","setTimeout","getQrCode","nextProps","nextContext","clearInterval","origUrl","window","href","authUrl","webAddress","wechatLogin","open","auth_url","alert","getCompanyQrCode","customStyles","content","top","left","right","bottom","marginRight","transform","styles","subsButton","subscribe","translate","qrTitle","Component","borderColor","color","width","textAlign"],"mappings":"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","sourcesContent":["import { Button, Toast } from \"react-weui\";\nimport Lang from \"../../lang/Lang\";\nimport React from \"react\";\nimport {IoIosStar} from \"react-icons/io\";\nimport {Config} from \"../../Config\";\nimport AuthService from \"../../service/AuthService\";\nimport Modal from 'react-modal';\nimport CompanyService from \"../../service/CompanyService\";\nimport UtilsService from \"../../service/UtilsService\";\n\n\n\nclass SubscribeBtn extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal: false\n        }\n    }\n    componentDidMount(props) {\n        // this.getQrCode(this.props.item, this.props.company)\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n\n    getLoginStatus= () => {\n        if(this.state.subscribeLoginLogId) {\n            AuthService.checkLoginStatus(this.state.subscribeLoginLogId || null)\n                .then(response => response.text())\n                .then(resp => {\n                    var res = JSON.parse(resp)\n                    if (res.log && res.log.tmp_token && res.log.tmp_token.trim() !== '') {\n                        this.setState({\n                            loading: true\n                        })\n                        this.loginWithTempCode(res.log.tmp_token.trim())\n                    }\n                })\n        }\n    }\n\n    loginWithTempCode = (tmpToken) => {\n        AuthService.loginWithTempCode(tmpToken)\n            .then(response => response.text())\n            .then(resp => {\n                var res = JSON.parse(resp)\n                if (res.return_code){\n                    localStorage.setItem('userToken', res.return_code);\n                    localStorage.setItem('isLogIn', true);\n                }\n                let params ={};\n                AuthService.getMe(params)\n                    .then((response) => response.json())\n                    .then((responseJson) => {\n                        localStorage.setItem('userObject', JSON.stringify(responseJson));\n                    })\n                    .then(() => {location.reload();\n                    })\n                    .catch((error) => {\n                        console.error(error);\n                    });\n            })\n    }\n\n\n    subscribe = (company, item) => {\n        let user = JSON.parse(localStorage.getItem('userObject'));\n        // user = {\n        //     wechat_is_subscriber: true\n        // }\n        if (!user) {\n            if (UtilsService.openedInWeChat()) {\n                this.weChatLogin()\n            } else {\n                let getLoginStatus = this.getLoginStatus\n                var params = {\n                    companyId: company.id,\n                    itemId: item && item.id\n                }\n                AuthService.getLoginSubscribeQrCode(params)\n                    .then(response => response.text())\n                    .then(resp => {\n                        var res = JSON.parse(resp)\n                        let interval = setInterval(getLoginStatus,1000);\n                        this.setState({\n                            qrUrl: res.qrcode,\n                            subscribeLoginLogId: res.subscribeLoginLogId,\n                            showModal: true,\n                            interval: interval\n                        })\n                    })\n            }\n        } else {\n            if (!user.wechat_is_subscriber) {\n                this.setState({\n                    loading: true\n                }, () => {\n                    CompanyService.subscribeCompany(company.id)\n                        .then(res => {\n                            this.setState({\n                                loading: false,\n                                success: true\n                            })\n                            this.state.toastTimer = setTimeout(()=> {\n                                this.setState({success: false});\n                            }, 2000);\n                        })\n                    ;\n                })\n            } else {\n                this.getQrCode(item, company)\n                // this.setState({\n                //     showModal: true\n                // })\n            }\n        }\n    }\n\n    weChatLogin() {\n        let origUrl = window.location.href;\n        let authUrl = Config.webAddress +'AuthPage';\n        AuthService.wechatLogin(origUrl, authUrl, {})\n            .then((response) => response.json())\n            .then((responseJson) => {\n                window.open(responseJson.auth_url, \"_self\");\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    }\n\n    getQrCode(item, company) {\n        let params = {};\n        if (item && item.id) {\n            params = {\n                itemId: item.id\n            }\n        }\n        let companyId = company.id\n        CompanyService.getCompanyQrCode(companyId, params)\n            .then(response => response.text())\n            .then(response => {\n                this.setState({\n                    qrUrl: response,\n                    showModal: true\n                })\n            })\n    }\n\n    render(){\n        const customStyles = {\n            content : {\n                top                   : '50%',\n                left                  : '50%',\n                right                 : 'auto',\n                bottom                : 'auto',\n                marginRight           : '-50%',\n                transform             : 'translate(-50%, -50%)'\n            }\n        };\n        // const company = this.props.company;\n\n        return (\n            <div>\n                <Button\n                    size='small'\n                    style={styles.subsButton}\n                    onClick={()=>{this.subscribe(this.props.company, this.props.item)}}\n                    plain\n                >\n                    <IoIosStar/>\n                    {Lang.translate('SUBSCRIBE')}\n                </Button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    // onAfterOpen={() => {this.getQrCode(item)}}\n                    onRequestClose={()=>{this.setState({showModal: false})}}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                >\n                        <div style={styles.qrTitle}>扫码关注该公司</div>\n                        <div style={styles.qrTitle}><small>将更及时的收到推送</small></div>\n                        <img style={styles.qrcode} src={this.state.qrUrl}/>\n                </Modal>\n                <Toast icon=\"success-no-circle\" show={this.state.success}>Success</Toast>\n                <Toast icon=\"loading\" show={this.state.loading}>Loading...</Toast>\n            </div>\n\n        );\n    }\n}\n\nconst styles = {\n    subsButton: {\n        borderColor: 'red',\n        color: 'red'\n        // padding: '2vw',\n    },\n    qrcode: {\n        width: '100%',\n    },\n    qrTitle: {\n        width: '100%',\n        textAlign: 'center'\n    },\n};\n\n\nexport default SubscribeBtn;\n\n"]},"metadata":{},"sourceType":"module"}