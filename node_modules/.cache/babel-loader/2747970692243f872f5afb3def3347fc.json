{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Button, ButtonArea } from \"react-weui\";\nimport Lang from '../../../lang/Lang';\nimport UtilsService from '../../../service/UtilsService';\nimport AuthService from \"../../../service/AuthService\";\nimport CartService from '../../../service/CartService';\nimport Colors from '../../../constants/Colors';\n\nvar ProductButtonArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductButtonArea, _React$Component);\n\n  function ProductButtonArea(props) {\n    var _this;\n\n    _classCallCheck(this, ProductButtonArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductButtonArea).call(this, props));\n    _this.state = {\n      item: _this.props.item,\n      isLogin: _this.props.isLogin,\n      selectedList: _this.props.selectedList,\n      callbackChangeView: _this.props.callbackChangeView\n    };\n    return _this;\n  }\n\n  _createClass(ProductButtonArea, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        item: nextProps.item,\n        isLogin: nextProps.address,\n        selectedList: nextProps.selectedList\n      });\n    }\n  }, {\n    key: \"addToCart\",\n    value: function addToCart() {\n      if (!this.state.isLogin) {\n        var companyId = this.state.item.company_id;\n        var params = {\n          items_info: []\n        };\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(this.state.selectedList), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            params['items_info'].push({\n              'item_id': item.id,\n              'qty': item.qty\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        CartService.addCartItems(companyId, params).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          console.log(responseJson);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } else {\n        this.weChatLogin();\n      }\n    }\n  }, {\n    key: \"buyNow\",\n    value: function buyNow() {\n      if (this.state.isLogin) {\n        this.state.callbackChangeView();\n      } else {\n        // this.weChatLogin();\n        this.state.callbackChangeView();\n      }\n    }\n  }, {\n    key: \"weChatLogin\",\n    value: function weChatLogin() {\n      var origUrl = window.location.href;\n      var authUrl = UtilsService.getWebAddress() + \"AuthPage\";\n      AuthService.wechatLogin(origUrl, authUrl, {}).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        window.open(responseJson.auth_url, \"_self\");\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: styles.buttonGroupContainer\n      }, React.createElement(ButtonArea, {\n        direction: \"horizontal\"\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          _this2.addToCart();\n        },\n        style: styles.btn\n      }, \"\\u52A0\\u5165\\u8D2D\\u7269\\u8F66\"), React.createElement(Button, {\n        onClick: function onClick() {\n          _this2.buyNow();\n        },\n        style: styles.btn\n      }, \"\\u7ACB\\u523B\\u8D2D\\u4E70\")));\n    }\n  }]);\n\n  return ProductButtonArea;\n}(React.Component);\n\nvar styles = {\n  buttonGroupContainer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: '100%'\n  },\n  btn: {\n    backgroundColor: Colors.appThemeColor,\n    color: Colors.fontColor,\n    fontWeight: 'bold'\n  }\n};\nexport default ProductButtonArea;","map":null,"metadata":{},"sourceType":"module"}