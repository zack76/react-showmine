{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/SubscribeBtn.js\";\nimport { Button, Toast } from \"react-weui\";\nimport Lang from \"../../lang/Lang\";\nimport React from \"react\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { Config } from \"../../Config\";\nimport AuthService from \"../../service/AuthService\";\nimport Modal from 'react-modal';\nimport CompanyService from \"../../service/CompanyService\";\nimport UtilsService from \"../../service/UtilsService\";\n\nvar SubscribeBtn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubscribeBtn, _React$Component);\n\n  function SubscribeBtn(props) {\n    var _this;\n\n    _classCallCheck(this, SubscribeBtn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubscribeBtn).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"subscribe\", function (company) {\n      var user = JSON.parse(localStorage.getItem('userObject')); // user = {\n      //     wechat_is_subscriber: true\n      // }\n\n      if (!user) {\n        if (UtilsService.openedInWeChat()) {\n          _this.weChatLogin();\n        } else {\n          AuthService.getLoginSubscribeQrCode().then(function (response) {\n            return response.text();\n          }).then(function (resp) {\n            var res = JSON.parse(resp);\n\n            _this.setState({\n              qrUrl: res.qrcode,\n              subscribeLoginLogId: res.subscribeLoginLogId,\n              showModal: true\n            });\n          });\n        }\n      } else {\n        if (user.wechat_is_subscriber) {\n          // subscribe actions\n          CompanyService.subscribeCompany(company.id).then(function (res) {\n            _this.setState({\n              success: true\n            });\n\n            _this.state.toastTimer = setTimeout(function () {\n              _this.setState({\n                success: false\n              });\n            }, 2000);\n          });\n        } else {\n          _this.setState({\n            showModal: true\n          });\n        }\n      }\n    });\n\n    _this.state = {\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(SubscribeBtn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      // if (UtilsService.openedInWeChat()) {\n      //     this.setState({\n      //         openedInWeChat: true\n      //     })\n      // }\n      this.getQrCode(this.props.item, this.props.company); // this.setState({\n      //     company: this.props.company,\n      //     item: this.props.item,\n      // }, () => {\n      //     WeChatService.loadWeChatJsConf(window.location.href);\n      // });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {// this.setState({\n      //     item: nextProps.item,\n      // }, () => {\n      //     WeChatService.loadWeChatJsConf(window.location.href);\n      // });\n    }\n  }, {\n    key: \"weChatLogin\",\n    value: function weChatLogin() {\n      var origUrl = window.location.href;\n      var authUrl = Config.webAddress + 'AuthPage';\n      AuthService.wechatLogin(origUrl, authUrl, {}).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        window.open(responseJson.auth_url, \"_self\");\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, {\n    key: \"getQrCode\",\n    value: function getQrCode(item, company) {\n      var _this2 = this;\n\n      var params = {};\n\n      if (item && item.id) {\n        params = {\n          itemId: item.id\n        };\n      }\n\n      var companyId = company.id;\n      CompanyService.getCompanyQrCode(companyId, params).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        _this2.setState({\n          qrUrl: response\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var customStyles = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      }; // const company = this.props.company;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        style: styles.subsButton,\n        onClick: function onClick() {\n          _this3.subscribe(_this3.props.company);\n        },\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(IoIosStar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), Lang.translate('SUBSCRIBE')), React.createElement(Modal, {\n        isOpen: this.state.showModal // onAfterOpen={() => {this.getQrCode(item)}}\n        ,\n        onRequestClose: function onRequestClose() {\n          _this3.setState({\n            showModal: false\n          });\n        },\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.qrTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u626B\\u7801\\u5173\\u6CE8\\u8BE5\\u516C\\u53F8\"), React.createElement(\"div\", {\n        style: styles.qrTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u5C06\\u66F4\\u53CA\\u65F6\\u7684\\u6536\\u5230\\u63A8\\u9001\")), React.createElement(\"img\", {\n        style: styles.qrcode,\n        src: this.state.qrUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Toast, {\n        icon: \"success-no-circle\",\n        show: this.state.success,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Success\"));\n    }\n  }]);\n\n  return SubscribeBtn;\n}(React.Component);\n\nvar styles = {\n  subsButton: {\n    borderColor: 'red',\n    color: 'red' // padding: '2vw',\n\n  },\n  qrcode: {\n    width: '100%'\n  },\n  qrTitle: {\n    width: '100%',\n    textAlign: 'center'\n  }\n};\nexport default SubscribeBtn;","map":{"version":3,"sources":["/Users/Zac/Sysbox/SHM/react/shm-react/my-app/components/Common/SubscribeBtn.js"],"names":["Button","Toast","Lang","React","IoIosStar","Config","AuthService","Modal","CompanyService","UtilsService","SubscribeBtn","props","company","user","JSON","parse","localStorage","getItem","openedInWeChat","weChatLogin","getLoginSubscribeQrCode","then","response","text","resp","res","setState","qrUrl","qrcode","subscribeLoginLogId","showModal","wechat_is_subscriber","subscribeCompany","id","success","state","toastTimer","setTimeout","getQrCode","item","nextProps","nextContext","origUrl","window","location","href","authUrl","webAddress","wechatLogin","json","responseJson","open","auth_url","catch","error","alert","params","itemId","companyId","getCompanyQrCode","customStyles","content","top","left","right","bottom","marginRight","transform","styles","subsButton","subscribe","translate","qrTitle","Component","borderColor","color","width","textAlign"],"mappings":"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","sourcesContent":["import { Button, Toast } from \"react-weui\";\nimport Lang from \"../../lang/Lang\";\nimport React from \"react\";\nimport {IoIosStar} from \"react-icons/io\";\nimport {Config} from \"../../Config\";\nimport AuthService from \"../../service/AuthService\";\nimport Modal from 'react-modal';\nimport CompanyService from \"../../service/CompanyService\";\nimport UtilsService from \"../../service/UtilsService\";\n\n\n\nclass SubscribeBtn extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal: false\n        }\n    }\n    componentDidMount(props) {\n        // if (UtilsService.openedInWeChat()) {\n        //     this.setState({\n        //         openedInWeChat: true\n        //     })\n        // }\n        this.getQrCode(this.props.item, this.props.company)\n        // this.setState({\n        //     company: this.props.company,\n        //     item: this.props.item,\n        // }, () => {\n        //     WeChatService.loadWeChatJsConf(window.location.href);\n        // });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        // this.setState({\n        //     item: nextProps.item,\n        // }, () => {\n        //     WeChatService.loadWeChatJsConf(window.location.href);\n        // });\n    }\n\n\n    subscribe = (company) => {\n        let user = JSON.parse(localStorage.getItem('userObject'));\n        // user = {\n        //     wechat_is_subscriber: true\n        // }\n        if (!user) {\n            if (UtilsService.openedInWeChat()) {\n                this.weChatLogin()\n            } else {\n                AuthService.getLoginSubscribeQrCode()\n                    .then(response => response.text())\n                    .then(resp => {\n                        var res = JSON.parse(resp)\n                        this.setState({\n                            qrUrl: res.qrcode,\n                            subscribeLoginLogId: res.subscribeLoginLogId,\n                            showModal: true\n                        })\n                    })\n            }\n        } else {\n            if (user.wechat_is_subscriber) {\n                // subscribe actions\n                CompanyService.subscribeCompany(company.id)\n                    .then(res => {\n                        this.setState({\n                            success: true\n                        })\n                        this.state.toastTimer = setTimeout(()=> {\n                            this.setState({success: false});\n                        }, 2000);\n                    })\n                ;\n            } else {\n                this.setState({\n                    showModal: true\n                })\n            }\n        }\n    }\n\n    weChatLogin() {\n        let origUrl = window.location.href;\n        let authUrl = Config.webAddress +'AuthPage';\n        AuthService.wechatLogin(origUrl, authUrl, {})\n            .then((response) => response.json())\n            .then((responseJson) => {\n                window.open(responseJson.auth_url, \"_self\");\n            })\n            .catch((error) => {\n                alert(error);\n            });\n    }\n\n    getQrCode(item, company) {\n        let params = {};\n        if (item && item.id) {\n            params = {\n                itemId: item.id\n            }\n        }\n        let companyId = company.id\n        CompanyService.getCompanyQrCode(companyId, params)\n            .then(response => response.text())\n            .then(response => {\n                this.setState({\n                    qrUrl: response\n                })\n            })\n    }\n\n    render(){\n        const customStyles = {\n            content : {\n                top                   : '50%',\n                left                  : '50%',\n                right                 : 'auto',\n                bottom                : 'auto',\n                marginRight           : '-50%',\n                transform             : 'translate(-50%, -50%)'\n            }\n        };\n        // const company = this.props.company;\n\n        return (\n            <div>\n                <Button\n                    size='small'\n                    style={styles.subsButton}\n                    onClick={()=>{this.subscribe(this.props.company)}}\n                    plain\n                >\n                    <IoIosStar/>\n                    {Lang.translate('SUBSCRIBE')}\n                </Button>\n                <Modal\n                    isOpen={this.state.showModal}\n                    // onAfterOpen={() => {this.getQrCode(item)}}\n                    onRequestClose={()=>{this.setState({showModal: false})}}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                >\n                        <div style={styles.qrTitle}>扫码关注该公司</div>\n                        <div style={styles.qrTitle}><small>将更及时的收到推送</small></div>\n                        <img style={styles.qrcode} src={this.state.qrUrl}/>\n                </Modal>\n                <Toast icon=\"success-no-circle\" show={this.state.success}>Success</Toast>\n            </div>\n\n        );\n    }\n}\n\nconst styles = {\n    subsButton: {\n        borderColor: 'red',\n        color: 'red'\n        // padding: '2vw',\n    },\n    qrcode: {\n        width: '100%',\n    },\n    qrTitle: {\n        width: '100%',\n        textAlign: 'center'\n    },\n};\n\n\nexport default SubscribeBtn;\n\n"]},"metadata":{},"sourceType":"module"}